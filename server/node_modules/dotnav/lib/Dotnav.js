'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dotnav = function (_React$Component) {
  _inherits(Dotnav, _React$Component);

  function Dotnav() {
    _classCallCheck(this, Dotnav);

    return _possibleConstructorReturn(this, (Dotnav.__proto__ || Object.getPrototypeOf(Dotnav)).apply(this, arguments));
  }

  _createClass(Dotnav, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          withArrows = _props.withArrows,
          count = _props.count,
          index = _props.index,
          classes = _props.classes,
          handleChange = _props.handleChange;


      if (count < 2) return null;

      return _react2.default.createElement(
        'nav',
        { className: classes.root },
        withArrows && _react2.default.createElement('button', {
          type: 'button',
          className: classes.arrowPrev,
          onClick: function onClick() {
            return handleChange(index <= 0 ? count - 1 : index - 1);
          }
        }),
        _react2.default.createElement(
          'ul',
          { className: classes.dots },
          Array.from({ length: count }, function (_, i) {
            return _react2.default.createElement('li', {
              key: i,
              className: index === i ? classes.dotActive : classes.dot,
              onClick: function onClick() {
                return handleChange(i);
              }
            });
          })
        ),
        withArrows && _react2.default.createElement('button', {
          type: 'button',
          className: classes.arrowNext,
          onClick: function onClick() {
            return handleChange(index >= count - 1 ? 0 : index + 1);
          }
        })
      );
    }
  }]);

  return Dotnav;
}(_react2.default.Component);

exports.default = Dotnav;


Dotnav.propTypes = {
  withArrows: _propTypes2.default.bool,
  count: _propTypes2.default.number,
  index: _propTypes2.default.number,
  handleChange: _propTypes2.default.func,
  classes: _propTypes2.default.shape({
    root: _propTypes2.default.string,
    dots: _propTypes2.default.string,
    dot: _propTypes2.default.string,
    dotActive: _propTypes2.default.string,
    arrowPrev: _propTypes2.default.string,
    arrowNext: _propTypes2.default.string
  })
};

Dotnav.defaultProps = {
  withArrows: false,
  count: 0,
  index: 0,
  handleChange: function handleChange() {},
  classes: {
    root: 'dotnav',
    dots: 'dotnav-dots',
    dot: 'dotnav-dot',
    dotActive: 'dotnav-dot dotnav-dot_active',
    arrowPrev: 'dotnav-arrow dotnav-arrow_prev',
    arrowNext: 'dotnav-arrow dotnav-arrow_next'
  }
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvdG5hdi5lczYiXSwibmFtZXMiOlsiRG90bmF2IiwicHJvcHMiLCJ3aXRoQXJyb3dzIiwiY291bnQiLCJpbmRleCIsImNsYXNzZXMiLCJoYW5kbGVDaGFuZ2UiLCJyb290IiwiYXJyb3dQcmV2IiwiZG90cyIsIkFycmF5IiwiZnJvbSIsImxlbmd0aCIsIl8iLCJpIiwiZG90QWN0aXZlIiwiZG90IiwiYXJyb3dOZXh0IiwiQ29tcG9uZW50IiwicHJvcFR5cGVzIiwiYm9vbCIsIm51bWJlciIsImZ1bmMiLCJzaGFwZSIsInN0cmluZyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7SUFFcUJBLE07Ozs7Ozs7Ozs7OzZCQUNWO0FBQUEsbUJBQ3FELEtBQUtDLEtBRDFEO0FBQUEsVUFDQ0MsVUFERCxVQUNDQSxVQUREO0FBQUEsVUFDYUMsS0FEYixVQUNhQSxLQURiO0FBQUEsVUFDb0JDLEtBRHBCLFVBQ29CQSxLQURwQjtBQUFBLFVBQzJCQyxPQUQzQixVQUMyQkEsT0FEM0I7QUFBQSxVQUNvQ0MsWUFEcEMsVUFDb0NBLFlBRHBDOzs7QUFHUCxVQUFJSCxRQUFRLENBQVosRUFBZSxPQUFPLElBQVA7O0FBRWYsYUFDRTtBQUFBO0FBQUEsVUFBSyxXQUFjRSxRQUFRRSxJQUEzQjtBQUNJTCxzQkFBYztBQUNkLGdCQUFPLFFBRE87QUFFZCxxQkFBY0csUUFBUUcsU0FGUjtBQUdkLG1CQUFZO0FBQUEsbUJBQU1GLGFBQWNGLFNBQVMsQ0FBVixHQUFlRCxRQUFRLENBQXZCLEdBQTJCQyxRQUFRLENBQWhELENBQU47QUFBQTtBQUhFLFVBRGxCO0FBTUU7QUFBQTtBQUFBLFlBQUksV0FBY0MsUUFBUUksSUFBMUI7QUFDSUMsZ0JBQU1DLElBQU4sQ0FBVyxFQUFFQyxRQUFRVCxLQUFWLEVBQVgsRUFBOEIsVUFBQ1UsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsbUJBQzlCO0FBQ0UsbUJBQVFBLENBRFY7QUFFRSx5QkFBY1YsVUFBVVUsQ0FBVixHQUFjVCxRQUFRVSxTQUF0QixHQUFrQ1YsUUFBUVcsR0FGMUQ7QUFHRSx1QkFBWTtBQUFBLHVCQUFNVixhQUFhUSxDQUFiLENBQU47QUFBQTtBQUhkLGNBRDhCO0FBQUEsV0FBOUI7QUFESixTQU5GO0FBZUlaLHNCQUFjO0FBQ2QsZ0JBQU8sUUFETztBQUVkLHFCQUFjRyxRQUFRWSxTQUZSO0FBR2QsbUJBQVk7QUFBQSxtQkFBTVgsYUFBY0YsU0FBU0QsUUFBUSxDQUFsQixHQUF1QixDQUF2QixHQUEyQkMsUUFBUSxDQUFoRCxDQUFOO0FBQUE7QUFIRTtBQWZsQixPQURGO0FBdUJEOzs7O0VBN0JpQyxnQkFBTWMsUzs7a0JBQXJCbEIsTTs7O0FBZ0NyQkEsT0FBT21CLFNBQVAsR0FBbUI7QUFDakJqQixjQUFZLG9CQUFVa0IsSUFETDtBQUVqQmpCLFNBQU8sb0JBQVVrQixNQUZBO0FBR2pCakIsU0FBTyxvQkFBVWlCLE1BSEE7QUFJakJmLGdCQUFjLG9CQUFVZ0IsSUFKUDtBQUtqQmpCLFdBQVMsb0JBQVVrQixLQUFWLENBQWdCO0FBQ3ZCaEIsVUFBTSxvQkFBVWlCLE1BRE87QUFFdkJmLFVBQU0sb0JBQVVlLE1BRk87QUFHdkJSLFNBQUssb0JBQVVRLE1BSFE7QUFJdkJULGVBQVcsb0JBQVVTLE1BSkU7QUFLdkJoQixlQUFXLG9CQUFVZ0IsTUFMRTtBQU12QlAsZUFBVyxvQkFBVU87QUFORSxHQUFoQjtBQUxRLENBQW5COztBQWVBeEIsT0FBT3lCLFlBQVAsR0FBc0I7QUFDcEJ2QixjQUFZLEtBRFE7QUFFcEJDLFNBQU8sQ0FGYTtBQUdwQkMsU0FBTyxDQUhhO0FBSXBCRSxnQkFBYyx3QkFBTSxDQUFFLENBSkY7QUFLcEJELFdBQVM7QUFDUEUsVUFBTSxRQURDO0FBRVBFLFVBQU0sYUFGQztBQUdQTyxTQUFLLFlBSEU7QUFJUEQsZUFBVyw4QkFKSjtBQUtQUCxlQUFXLGdDQUxKO0FBTVBTLGVBQVc7QUFOSjtBQUxXLENBQXRCIiwiZmlsZSI6IkRvdG5hdi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb3RuYXYgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB3aXRoQXJyb3dzLCBjb3VudCwgaW5kZXgsIGNsYXNzZXMsIGhhbmRsZUNoYW5nZSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChjb3VudCA8IDIpIHJldHVybiBudWxsO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxuYXYgY2xhc3NOYW1lID0geyBjbGFzc2VzLnJvb3QgfT5cbiAgICAgICAgeyB3aXRoQXJyb3dzICYmIDxidXR0b25cbiAgICAgICAgICB0eXBlID0gJ2J1dHRvbidcbiAgICAgICAgICBjbGFzc05hbWUgPSB7IGNsYXNzZXMuYXJyb3dQcmV2IH1cbiAgICAgICAgICBvbkNsaWNrID0geyAoKSA9PiBoYW5kbGVDaGFuZ2UoKGluZGV4IDw9IDApID8gY291bnQgLSAxIDogaW5kZXggLSAxKSB9XG4gICAgICAgIC8+IH1cbiAgICAgICAgPHVsIGNsYXNzTmFtZSA9IHsgY2xhc3Nlcy5kb3RzIH0+XG4gICAgICAgICAgeyBBcnJheS5mcm9tKHsgbGVuZ3RoOiBjb3VudCB9LCAoXywgaSkgPT5cbiAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICBrZXkgPSB7IGkgfVxuICAgICAgICAgICAgICBjbGFzc05hbWUgPSB7IGluZGV4ID09PSBpID8gY2xhc3Nlcy5kb3RBY3RpdmUgOiBjbGFzc2VzLmRvdCB9XG4gICAgICAgICAgICAgIG9uQ2xpY2sgPSB7ICgpID0+IGhhbmRsZUNoYW5nZShpKSB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIHsgd2l0aEFycm93cyAmJiA8YnV0dG9uXG4gICAgICAgICAgdHlwZSA9ICdidXR0b24nXG4gICAgICAgICAgY2xhc3NOYW1lID0geyBjbGFzc2VzLmFycm93TmV4dCB9XG4gICAgICAgICAgb25DbGljayA9IHsgKCkgPT4gaGFuZGxlQ2hhbmdlKChpbmRleCA+PSBjb3VudCAtIDEpID8gMCA6IGluZGV4ICsgMSkgfVxuICAgICAgICAvPiB9XG4gICAgICA8L25hdj5cbiAgICApO1xuICB9XG59XG5cbkRvdG5hdi5wcm9wVHlwZXMgPSB7XG4gIHdpdGhBcnJvd3M6IFByb3BUeXBlcy5ib29sLFxuICBjb3VudDogUHJvcFR5cGVzLm51bWJlcixcbiAgaW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGhhbmRsZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIGNsYXNzZXM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcm9vdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBkb3RzOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGRvdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBkb3RBY3RpdmU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYXJyb3dQcmV2OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGFycm93TmV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgfSksXG59O1xuXG5Eb3RuYXYuZGVmYXVsdFByb3BzID0ge1xuICB3aXRoQXJyb3dzOiBmYWxzZSxcbiAgY291bnQ6IDAsXG4gIGluZGV4OiAwLFxuICBoYW5kbGVDaGFuZ2U6ICgpID0+IHt9LFxuICBjbGFzc2VzOiB7XG4gICAgcm9vdDogJ2RvdG5hdicsXG4gICAgZG90czogJ2RvdG5hdi1kb3RzJyxcbiAgICBkb3Q6ICdkb3RuYXYtZG90JyxcbiAgICBkb3RBY3RpdmU6ICdkb3RuYXYtZG90IGRvdG5hdi1kb3RfYWN0aXZlJyxcbiAgICBhcnJvd1ByZXY6ICdkb3RuYXYtYXJyb3cgZG90bmF2LWFycm93X3ByZXYnLFxuICAgIGFycm93TmV4dDogJ2RvdG5hdi1hcnJvdyBkb3RuYXYtYXJyb3dfbmV4dCcsXG4gIH0sXG59O1xuIl19